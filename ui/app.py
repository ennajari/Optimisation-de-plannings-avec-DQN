import streamlit as st
import numpy as np
import tensorflow as tf

# Chargement du mod√®le
model = tf.keras.models.load_model('../models/dqn_final.h5', compile=False)


st.set_page_config(page_title="Optimisation de Planning", layout="centered")
st.title("üß† Optimisation de Planning avec DQN")
st.markdown("Entrez les caract√©ristiques de la t√¢che pour pr√©dire l'action optimale.")

# Entr√©e utilisateur pour les 3 features (adapt√©es √† l'entr√©e du mod√®le)
feature1 = st.number_input("Dur√©e de la t√¢che (en heures)", min_value=0.0, value=1.0)
feature2 = st.number_input("Priorit√© (ex : 1=faible, 5=√©lev√©e)", min_value=1, max_value=5, value=3)
feature3 = st.number_input("Complexit√© (1 √† 10)", min_value=1, max_value=10, value=5)

# Former un tableau d'entr√©e compatible avec le mod√®le (1, 3)
input_array = np.array([[feature1, feature2, feature3]])

# Faire la pr√©diction
prediction = model.predict(input_array)
predicted_action = np.argmax(prediction[0])

# Affichage du r√©sultat
st.success(f"‚úÖ Action optimale pr√©dite : **{predicted_action}**")
